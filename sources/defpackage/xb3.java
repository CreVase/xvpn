package defpackage;

import com.security.xvpn.z35kb.R;
import java.util.HashMap;

/* loaded from: classes2.dex */
public abstract class xb3 {

    /* renamed from: a, reason: collision with root package name */
    public static final HashMap f5141a;

    static {
        n42 n42Var = new n42("Mail is sent too frequently, please retry later.", Integer.valueOf(R.string.MailSentFrequently));
        Integer valueOf = Integer.valueOf(R.string.AccountErrorInputEmail);
        Integer valueOf2 = Integer.valueOf(R.string.AccountErrorSamePassword);
        Integer valueOf3 = Integer.valueOf(R.string.AccountErrorInputPassword);
        n42[] n42VarArr = {n42Var, new n42("Use 50 characters or fewer for your password", Integer.valueOf(R.string.PasswordTooLong)), new n42("Password must be 6+ characters.", Integer.valueOf(R.string.PasswordTooShort)), new n42("The password is incorrect.", Integer.valueOf(R.string.PasswordIncorrect)), new n42("This email already exist, try to log in?", Integer.valueOf(R.string.EmailExistError)), new n42("Process failed, please check your network and retry.", Integer.valueOf(R.string.ProcessFailedCheckNetwork)), new n42("Please enter your email.", valueOf), new n42("This doesn't look like a valid email.", Integer.valueOf(R.string.InvalidEmail)), new n42("This email is not registered, try another?", Integer.valueOf(R.string.EmailNotRegistered)), new n42("Process failed, invalid email address.", Integer.valueOf(R.string.ProcessFailedInvalidEmail)), new n42("Invalid code, please resend verification code.", Integer.valueOf(R.string.InvalidCode)), new n42("Incorrect code.", Integer.valueOf(R.string.IncorrectCode)), new n42("Incorrect password. You may contact the one who give you this account.", Integer.valueOf(R.string.AccountSoleDevicePassInvalid)), new n42("For All", Integer.valueOf(R.string.ForAll)), new n42("For Mobile", Integer.valueOf(R.string.ForMobile)), new n42("End at", Integer.valueOf(R.string.EndAt)), new n42("Mail is sent too frequently, please retry after 24 hours.", Integer.valueOf(R.string.MailSentDailyLimit)), new n42("1 Month for All Platforms", Integer.valueOf(R.string.Premium1MonthAllPlatform)), new n42("1 Year for All Platforms", Integer.valueOf(R.string.Premium1YearAllPlatform)), new n42("6 Months for All Platforms", Integer.valueOf(R.string.Premium6MonthAllPlatform)), new n42("1 Month for Mobile", Integer.valueOf(R.string.Premium1MonthMobile)), new n42("1 Year for Mobile", Integer.valueOf(R.string.Premium1YearMobile)), new n42("All Life Time", Integer.valueOf(R.string.PremiumLifetime)), new n42("Unknown", Integer.valueOf(R.string.Unknown)), new n42("kqn63rx42p", Integer.valueOf(R.string.ResellerSubmitNetworkError)), new n42("New password canâ€™t be the same as your old one.", valueOf2), new n42("The new password should be different from the old one.", valueOf2), new n42("Please enter your email.", valueOf), new n42("Please enter your password.", valueOf3), new n42("Please enter the verification code.", Integer.valueOf(R.string.AccountErrorInputVerificationCode)), new n42("Wrong email or password.", Integer.valueOf(R.string.AccountErrorWrongEmailPassword)), new n42("Premium for mobile", Integer.valueOf(R.string.PremiumForMobile)), new n42("Premium for all platform secondary", Integer.valueOf(R.string.PremiumForAllSecondary)), new n42("Premium for all platform", Integer.valueOf(R.string.PremiumForAll)), new n42("All locations", Integer.valueOf(R.string.AllLocations)), new n42("Game", Integer.valueOf(R.string.Game)), new n42("All locations for video", Integer.valueOf(R.string.AllLocationForVideo)), new n42("Streaming", Integer.valueOf(R.string.Streaming)), new n42("Please describe the issue detail here", Integer.valueOf(R.string.FaqReplyTalkToHuman)), new n42("No connection, please check your network", Integer.valueOf(R.string.FaqNoConnection)), new n42("Please choose one from following options", Integer.valueOf(R.string.FaqChooseOne)), new n42("day", Integer.valueOf(R.string.FaqReplyTalkToHumanDay)), new n42("days", Integer.valueOf(R.string.FaqReplyTalkToHumanDays)), new n42("hour", Integer.valueOf(R.string.FaqReplyTalkToHumanHour)), new n42("hours", Integer.valueOf(R.string.FaqReplyTalkToHumanHours)), new n42("minute", Integer.valueOf(R.string.FaqReplyTalkToHumanMinute)), new n42("minutes", Integer.valueOf(R.string.FaqReplyTalkToHumanMinutes)), new n42("Back to main menu", Integer.valueOf(R.string.BackToMainMenu)), new n42("Talk to a human", Integer.valueOf(R.string.TalkToHuman)), new n42("X-VPN will select protocol that is most appropriate for your network.", Integer.valueOf(R.string.ProtocolDescAuto)), new n42("Simple and fast, maybe unstable under certain network conditions.", Integer.valueOf(R.string.ProtocolDescA)), new n42("Our exclusive protocol ensures a stable and secure connection with a high success rate. It supports only The Fastest Server and the Everest Line for TLS-3.", Integer.valueOf(R.string.ProtocolDescK)), new n42("The balance of speed and stability, universal for all networks.", Integer.valueOf(R.string.ProtocolDescB)), new n42("High security, reliability, and stability.", Integer.valueOf(R.string.ProtocolDescC)), new n42("Applying special encryption methods, which may be very effective under certain network conditions.", Integer.valueOf(R.string.ProtocolDescD)), new n42("Optimized privacy and security than HTTP, but may be slower.", Integer.valueOf(R.string.ProtocolDescE)), new n42("Prepared for certain special network environments.", Integer.valueOf(R.string.ProtocolDescF)), new n42("Similar to FTP, try it when other protocols cannot connect.", Integer.valueOf(R.string.ProtocolDescG)), new n42("An upgraded version of TCP, which improves security, but the connection success rate may decrease.", Integer.valueOf(R.string.ProtocolDescH)), new n42("An upgraded version of HTTP, which provides better privacy protection, but connection speed may lower.", Integer.valueOf(R.string.ProtocolDescI)), new n42("An usual fast protocol, but easily be blocked by the internet provider in many cases.", Integer.valueOf(R.string.ProtocolDescJ)), new n42("Similar to K-Everest, just optimized the performance in some regions.", Integer.valueOf(R.string.ProtocolDescM)), new n42("Auto", Integer.valueOf(R.string.Auto)), new n42("Use 72 characters or fewer for your password", Integer.valueOf(R.string.AccountErrorPasswordOverflow)), new n42("The passwords you typed do not match.", Integer.valueOf(R.string.AccountErrorPasswordAgainNotMatch)), new n42("Please enter different password", valueOf2), new n42("Password must contain at least 8 characters.", Integer.valueOf(R.string.AccountErrorPasswordMinLen)), new n42("Password can not be empty.", valueOf3), new n42("8 or more characters", Integer.valueOf(R.string.PasswordRequirementLen)), new n42("uppercase letter", Integer.valueOf(R.string.PasswordRequirementUppercase)), new n42("lowercase letter", Integer.valueOf(R.string.PasswordRequirementLowercase)), new n42("number", Integer.valueOf(R.string.PasswordRequirementNumber)), new n42("One or more invalid special characters are detected.", Integer.valueOf(R.string.PasswordTipsNotSupportCharacter)), new n42("Ended on", Integer.valueOf(R.string.EndedOn)), new n42("Pause ends on", Integer.valueOf(R.string.PauseEndsOn)), new n42("Pauses on", Integer.valueOf(R.string.PausesOn)), new n42("Renews on", Integer.valueOf(R.string.RenewsOn)), new n42("Expires on", Integer.valueOf(R.string.ExpiresOn))};
        HashMap hashMap = new HashMap(bx3.N(78));
        for (int i = 0; i < 78; i++) {
            n42 n42Var2 = n42VarArr[i];
            hashMap.put(n42Var2.f3395a, n42Var2.f3396b);
        }
        f5141a = hashMap;
    }
}
